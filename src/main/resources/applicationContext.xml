<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd ">

	<!-- 加载spring注解...begin -->
	<context:annotation-config />
	<context:component-scan base-package="com.demo" />
	<!-- 加载spring注解...end -->

	<!-- 开启支持注解式事务...bgin -->
	<tx:annotation-driven proxy-target-class="true" />
	<!-- 开启支持注解式事务...end -->

	<!-- 开启aop切面功能 ...bgin -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<!-- 开启aop切面功能 ...end -->

	<!-- 读取配置文件到spring...begin -->
	<!-- <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
		<property name="locations"> <value>classpath:jdbc.properties</value> </property> 
		</bean> -->
	<!-- 此配置其实和上面注释的配置功能是一样的 -->
	<context:property-placeholder location="classpath:jdbc.properties"
		file-encoding="utf8" />
	<!-- 国际化文件 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="i18n/messages" />
	</bean>
	<!-- 读取配置文件到spring...end -->

	<!-- 数据源...begin -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" scope="singleton">
		<property name="driverClass" value="${jdbc.driverclass}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
		<property name="autoCommitOnClose" value="${jdbc.autoCommitOnClose}" />
		<property name="minPoolSize" value="${jdbc.minPoolSize}" />
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<property name="checkoutTimeout" value="${jdbc.checkoutTimeout}" />
	</bean>
	<!-- 数据源...end -->

	<!-- 配置mybatis的session工厂...begin -->
	<bean id="mybatisSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		scope="singleton">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:com/demo/dao/mybatis/*_mapper.xml" />
		<property name="typeAliasesPackage" value="com.demo.entities" />
		<property name="configLocation" value="classpath:mybatis_config.xml" />
	</bean>
	<!-- 配置mybatis的session工厂...end -->

	<!-- 事务控制...begin -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:advice id="transactionManagerAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="query*" propagation="REQUIRED" read-only="true" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="regist*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="tma"
			expression="execution(* com.demo..service..*.*(..))" />
		<aop:advisor advice-ref="transactionManagerAdvice"
			pointcut-ref="tma" />
	</aop:config>
	<!-- 事务控制...end -->

	<!-- mybatis会话...begin -->
	<bean id="mybatisSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="mybatisSessionFactory" />
	</bean>
	<!-- mybatis会话...end -->

	<!-- 监控项目执行情况....begin -->
	<bean id="pmaop" class="com.demo.aop.ProjectMonitorAOP" />
	<aop:config proxy-target-class="true">
		<aop:pointcut
			expression="execution(* com.demo.dao.*.*(..)) or execution(* com.demo.service.*.*(..)) or execution(* com.demo.web.controllers.*.*(..))"
			id="pmpointcut" />
		<aop:aspect ref="pmaop">
			<aop:before method="beforeExecute" pointcut-ref="pmpointcut" />
			<aop:after method="afterExecute" pointcut-ref="pmpointcut" />
			<aop:after-throwing method="afterThrowing"
				pointcut-ref="pmpointcut" throwing="ex" />
		</aop:aspect>
	</aop:config>
	<!-- 监控项目执行情况....end -->
</beans>